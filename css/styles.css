/* styles.css */

/* Global variables */

:root {
background-color: #041118;
--dark-color: #204E60;
--link-color: #A1D0BE;
--light-color: #05AA9A;
--lightest-color: #E5D9AB;
--darker-color: #8E2F2A;
}

/* Main styles */

body {
font-family: "fagun", sans-serif; 
font-style: normal;
color: var(--lightest-color); 
margin: 0;
}

h1 {
font-family: "cofo raffine", serif;
font-style: normal;
font-weight: bold; 
font-size: 30px;
color: var(--link-color)
}

h2 {
font-family: "cofo raffine", serif;
font-style: normal;
font-weight: bold;
font-size: 200px;
color: var(--light-color);
}

h3 {
font-family: "fagun", sans-serif;
font-weight: medium;
font-size: 20px;
color: var(--link-color);
}

h4 {
font-family: "fagun", sans-serif;
font-weight: regular;
font-size: 48px;
color: var(--light-color);
}

.special-headline {
font-family: "cofo raffine", serif;
font-style: normal;
font-weight: bold;
font-size: 40px;
color: var(--lightest-color);
align-content: center;
text-align: center;
}

p {
font-family: "fagun", sans-serif; 
font-style: normal;
font-size: 14px;
color: var(--lightest-color); 
}

.header {
background-color: var(--dark-color);
position: sticky;
top: 0;
z-index: 10;
box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); 
a {
  text-decoration: none;
}
a:hover {
  color: var(--darker-color);
  }
}

.nav-holder {
  max-width: 1080px;
  margin: 0 auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: .75em 1rem;
  position: relative;
  box-sizing: border-box;
  a:hover {
  color: var(--darker-color);
  }
}

main {
  position: relative;
}

.content-wrapper {
    max-width: 1080px; /* Keep your desired content width */
    margin: 0 auto;    /* Center the content */
    padding: 2em 1em;  /* Add the padding here instead of on .post/#post */
}

.dark-section {
  background: var(--background-color, #041118);
  padding: .5em 1em;
  width: 100%;
  box-sizing: border-box; 
}

.light-section {
  background-color: var(--dark-color);
  padding: .5em 1em;
  width: 100%;
  box-sizing: border-box; 
}

.grid-assign-parent {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(4, 1fr);
  gap: 1em;
  margin-bottom: 1em;
}

.grid-assign-child {
  min-height: 1em;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--background-color);
}

.grid-assign-special-child {
  position: relative;
  grid-row: 2 / 4; /*start at row 2 and go to row 4 */
  grid-column: 2 / 4; /*start at column 2 and go to column 4 */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  gap: 0.25rem;
  overflow: hidden; /* clip video to the cell */
  /* full-ish viewport height minus header (adjust 80px to match your header) */
  min-height: calc(100vh - 80px);
}

/* remove default heading margins so centering is exact */
.grid-assign-special-child h2,
.grid-assign-special-child h4 {
  margin: 0;
}

/* Help from chat thank you */
/* Make every grid cell center its content (or apply to a specific grid container) */
.grid-container {
  display: grid;
  place-items: center; /* shorthand for align-items + justify-items */
  /* ...your existing grid rules... */
}

/* or for a single grid child */
.grid-child {
  justify-self: center;
  align-self: center;
  text-align: center;
}

.flex-container-justify {
display: flex;
justify-content: center;
flex-wrap: nowrap;
}

.flex-item {
width: 25%;
columns: 3;
margin: 1em;
padding: 1em;
}

/* Center GIFs inside the flex-grid area and make them responsive */
.flex-grid {
  display: flex;
  justify-content: center;
}

.flex-card {
  display: flex;
  gap: 1rem;
  justify-content: space-between; /* push images to opposite sides of the container */
  align-items: center;
  flex-wrap: nowrap;
  /* center the container itself so the midpoint between images is at page center */
  width: min(900px, 70vw);
  margin: 0 auto;
}

.flex-card-inner {
  display: flex;
  justify-content: center;
  align-items: center;
}

.flex-card-inner img {
  display: block;
  max-width: 600px; /* limit each gif width so they sit clearly left/right of center */
  height: auto;
  margin: 0 auto;
}

/* Hand videos: size and cursor */
.flex-card-inner video {
  max-width: 600px;
  width: 100%;
  height: auto;
  display: block;
  cursor: pointer;
}

/* Center any single images placed directly inside a section (like card-shuffle.gif) */
section > div > img {
  display: block;
  margin: 1rem auto;
  max-width: 100%;
  height: auto;
}

/* Responsive: stack the GIFs vertically on small screens */
@media (max-width: 700px) {
  .flex-card {
    flex-direction: column;
    gap: 0.75rem;
    width: auto;
  }
  .flex-card-inner img {
    max-width: 80vw;
  }
}

html {
  scroll-behavior: smooth;
  scroll-padding-top: var(--header-height, 80px);
}

/* base colors for nav links (ensure headings inside anchors inherit this) */
.nav-holder a,
.nav-holder a h3 {
  color: var(--link-color);
  transition: color 160ms ease;
}

.nav-holder a .special-headline {
  color: var(--lightest-color);
  transition: color 160ms ease;
}

/* hover/focus state - changes the text color only */
.nav-holder a:hover,
.nav-holder a:focus,
.nav-holder a:hover h3,
.nav-holder a:focus h3,
.nav-holder a:hover .special-headline,
.nav-holder a:focus .special-headline {
  color: var(--light-color);
}

.flex-grid {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

.flex-card {
  display: flex;
  width: calc(100%/2);
  gap: 3 em;
  justify-content: center;
}

.flex-card-inner {
  margin: 1em;
  flex-grow: 1;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  gap: 0.25rem;
}

.video-overlay-text {
  position: relative; /* Make sure the text respects z-index */
  z-index: 2; /* Higher z-index than the video (z-index: 1) */
  /* This wrapper inherits the flex properties from .grid-assign-special-child */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
#background-video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover; /* Ensures the video covers the entire container without stretching */
  z-index: 1; /* Place the video layer *under* the text */
  pointer-events: none;
}

.grid-area-parent {
  display: grid;
  grid-template-columns: 2fr 5fr;
  gap: 1em;
  margin-bottom: 1em;
  grid-template-areas:
    'header header'
    'sidebar main'
    'footer footer';
    /* notice how it looks like the grid, visually */
}

.area-header {
  grid-area: header;
  justify-content: right;
}

.area-sidebar {
  grid-area: sidebar;
  min-width: 800px;
}

.area-main {
  grid-area: main;
}

.area-footer {
  grid-area: footer;
}